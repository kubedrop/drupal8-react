{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/pages/article/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction Article(_ref) {\n  var post = _ref.post;\n  //console.log(post)\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }\n  }, post.data.attributes.title);\n}\n\n_c = Article;\nexport var __N_SSG = true;\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["/usr/src/app/pages/article/[id].js"],"names":["Article","post","data","attributes","title"],"mappings":";;;;AAAA,SAASA,OAAT,OAA2B;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACvB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACC,IAAL,CAAUC,UAAV,CAAqBC,KADxB,CADF;AAKD;;KARMJ,O;;AAsCP,eAAeA,OAAf","sourcesContent":["function Article({ post }) {\n    //console.log(post)\n    \n    return (\n      <div>\n        {post.data.attributes.title}\n      </div>\n    )\n  }\n\n  export async function getStaticPaths() {\n    // Call an external API endpoint to get posts\n    const res = await fetch('http://webserver/jsonapi/node/article')\n\n    const {data} = await res.json()\n    \n    // Get the paths we want to pre-render based on posts\n    const paths = data.map((article) => `/article/${article.id}`)\n    console.log(paths);\n\n    // We'll pre-render only these paths at build time.\n    // { fallback: false } means other routes should 404.\n    return { paths, fallback: false }\n  }\n\n  export async function getStaticProps({ params }) {\n    //console.log(params);\n    // params contains the post `id`.\n    // If the route is like /posts/1, then params.id is 1\n    const res = await fetch(`http://webserver/jsonapi/node/article/${params.id}`)\n    const post = await res.json()\n  \n    // Pass post data to the page via props\n    return { props: { post } }\n  }\n  \n\n  \n  export default Article"]},"metadata":{},"sourceType":"module"}