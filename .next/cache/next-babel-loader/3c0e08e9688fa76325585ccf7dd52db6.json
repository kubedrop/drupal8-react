{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/pages/article/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction Article(_ref) {\n  var _this = this;\n\n  var post = _ref.post;\n  console.log(post);\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }\n  }, posts.map(function (post) {\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 11\n      }\n    }, post.title);\n  }));\n}\n\n_c = Article;\nexport var __N_SSG = true;\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["/usr/src/app/pages/article/[id].js"],"names":["Article","post","console","log","posts","map","title"],"mappings":";;;;AAAA,SAASA,OAAT,OAA2B;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACC,GAAN,CAAU,UAACJ,IAAD;AAAA,WACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACK,KAAV,CADS;AAAA,GAAV,CADH,CADF;AAOD;;KATMN,O;;AAsCP,eAAeA,OAAf","sourcesContent":["function Article({ post }) {\n    console.log(post)\n    return (\n      <ul>\n        {posts.map((post) => (\n          <li>{post.title}</li>\n        ))}\n      </ul>\n    )\n  }\n\n  export async function getStaticPaths() {\n    // Call an external API endpoint to get posts\n    const res = await fetch('http://webserver/jsonapi/node/article')\n    const posts = await res.json()\n    console.log(posts);\n    return;\n    // Get the paths we want to pre-render based on posts\n    const paths = posts.map((article) => `/article/${article.attributes.id}`)\n  \n    // We'll pre-render only these paths at build time.\n    // { fallback: false } means other routes should 404.\n    return { paths, fallback: false }\n  }\n\n  export async function getStaticProps({ params }) {\n    console.log(params);\n    // params contains the post `id`.\n    // If the route is like /posts/1, then params.id is 1\n    const res = await fetch(`http://webserver/jsonapi/node/article/${params.id}`)\n    const post = await res.json()\n  \n    // Pass post data to the page via props\n    return { props: { post } }\n  }\n  \n\n  \n  export default Article"]},"metadata":{},"sourceType":"module"}